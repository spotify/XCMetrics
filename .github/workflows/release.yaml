name: release_binaries
on:
  release:
    types: created

jobs:
  macOS:
    name: Add macOS binaries to release
    runs-on: macOS-latest
    env:
      XCODE_VERSION: ${{ '14.3.1' }}
    steps:
      - name: Select Xcode
        run: "sudo xcode-select -s /Applications/Xcode_$XCODE_VERSION.app"
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set tag name
        run: echo "TAG_NAME=$(echo $GITHUB_REF | cut -c 11-)" >> $GITHUB_ENV
      - name: Build x86_64-apple-macosx
        run: "swift build -c release --triple x86_64-apple-macosx"
      - name: Save x86_64 executable to be lipo'd later
        run: "mkdir tmp && cp .build/release/xcmetrics tmp/xcmetrics-x86_64"
      - name: Zip release
        run: "mkdir releases && zip -j releases/XCMetrics-macOS-x86_64-$TAG_NAME.zip XCMetricsLauncher LICENSE.md README.md .build/release/xcmetrics"
      - name: Build arm64-apple-macosx
        run: "swift build -c release --triple arm64-apple-macosx"
      - name: Zip arm64-apple-macosx release
        run: "zip -j releases/XCMetrics-macOS-arm64-$TAG_NAME.zip XCMetricsLauncher LICENSE.md README.md .build/release/xcmetrics"
      - name: Lipo macOS executables
        run: "lipo -create -output tmp/xcmetrics tmp/xcmetrics-x86_64 .build/release/xcmetrics"
      - name: Zip x86_64-arm64-apple-macosx release
        run: "zip -j releases/XCMetrics-macOS-arm64-x86_64-$TAG_NAME.zip XCMetricsLauncher LICENSE.md README.md tmp/xcmetrics"
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: releases/*
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true

  dockerhub:
    name: Publish Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: spotify/xcmetrics:${{ steps.get_version.outputs.VERSION }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
